/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

@import 'variables.scss';
@import 'typography.scss';
@import "semantic-ui/elements/icon";
@import "semantic-ui/elements/input";

html {
  font-size: 62.5%;
}

body {
  color: $black;
  font-family: $font-family;
  margin: 0;
}

.hero {
  background-color: $yellow;
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  @media (min-width: $desktop) {
    flex-direction: row;
  }
}

.hero--home {
  justify-content: space-between;
  padding: 3rem 2rem;

  @media (min-width: $desktop) {
    align-items: center;
    padding: 6rem 12rem;
  }

  h1 {
    margin-bottom: 1rem;
  }
}

.hero--recipe {
  padding: 2rem 2rem;

  @media (min-width: $desktop) {
    align-items: flex-start;
    padding: 2rem 12rem;
  }

  .ui.button {
    background-color: $green-dark !important;
    border-radius: 0 $border-radius-s $border-radius-s 0;
    color: $white;
    font-size: 2.1rem;
    position: absolute;
    top: 2rem;
    left: 0;
    padding: 1.3rem !important;
  }

  h1 {
    margin-bottom: 11.5rem;
    margin-top: 7rem;

    @media (min-width: $desktop) {
      margin-top: 0.5rem;
      margin-left: auto;
      margin-right: auto;
      width: 450px;
    }
  }
}

.hero__copy {
  flex-basis: 50%;
  margin-bottom: 2rem;

  @media (min-width: $desktop) {
    margin-bottom: 0;
  }
}

form {
  display: flex;
  justify-content: flex-end;
  width: 100%;

  @media (min-width: $desktop) {
    flex-basis: 40%;
  }
}

.ui.input {
  margin-right: 1rem;
  flex: 1;
}

.ui.input > input {
  border: none;
  border-radius: $border-radius-s;
  font-size: 1.8rem;
  line-height: 2.6rem;
  padding: 1.2rem 1rem;
}

button.ui.icon.button {
  background-color: $green-dark !important;
  border: none;
  border-radius: $border-radius-s;
  color: $white;
  font-size: 2.1rem;
  padding: 1.3rem !important;
}

.m-hidden {
  display: none;

  @media (min-width: $desktop) {
    display: inherit;
  }
}

.container {
  margin: 4rem 2rem;

  @media (min-width: $desktop) {
    margin: 4rem 12rem;
  }
}

.container--recipe {
  max-width: 450px;

  @media (min-width: $desktop) {
    margin-left: auto;
    margin-right: auto;
  }
}

.recipe-carousel {
  display: flex;
  flex-direction: row;
  overflow-x: scroll;

  & > * {

    &:not(:last-of-type) {
      margin-right: 2rem;
    }
  }
}

.recipe-card--large {
  flex: 1;

  div {
    background-position: center center;
    background-size: cover;
    border-radius: $border-radius-m;
    height: 27.5rem;
    margin: 2rem 0 1rem;
    width: 225px;

    @media (min-width: $desktop) {
      width: 100%;
    }
  }
}

.recipe__image {
  background-position: center center;
  background-size: cover;
  border-radius: $border-radius-m;
  height: 20rem;
  margin-bottom: 4rem;
  margin-top: -15.5rem;
  width: 100%;
}

.recipe__subheader {
  align-items: center;
  display: flex;
  justify-content: space-between;
}

.ingredient {
  align-items: center;
  display: flex;
  padding: 2rem 0;
  transition: $transition;

  &:hover {
    cursor: pointer;
  }

  &:not(:last-of-type) {
    border-bottom: 1px solid $gray-light;
  }
}

.checkbox {
  border: 2px solid $gray-dark;
  box-sizing: border-box;
  border-radius: 100%;
  display: block;
  flex: 0 0 20px;
  height: 2rem;
  margin-right: 2rem;
  transition: $transition;
  width: 2rem;
}

.ingredient--checked {

  p {
    color: $gray-dark;
    text-decoration: line-through;
  }

  .checkbox{
    border: none;
    display: flex;
    justify-content: center;

    &:after{
      align-self: center;
      content: '';
      display: block;
      width: 6px;
      height: 12px;
      border: solid $gray-dark;
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }
  }
}
